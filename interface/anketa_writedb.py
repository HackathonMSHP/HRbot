from data.database import *

async def show_worker_profile(chat_id):
    worker = await get_worker(chat_id)
    if not worker:
        return "–ü—Ä–æ—Ñ–∏–ª—å —Ä–∞–±–æ—Ç–Ω–∏–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω"
    
    profile_text = (
        f"üë§ <b>–ü—Ä–æ—Ñ–∏–ª—å —Ä–∞–±–æ—Ç–Ω–∏–∫–∞</b>\n\n"
        f"{worker.get('name', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')}, {worker.get('age', '–ù–µ —É–∫–∞–∑–∞–Ω')}\n"
        f"üè¢ –î–æ–ª–∂–Ω–æ—Å—Ç—å: {worker.get('sphere', '–ù–µ —É–∫–∞–∑–∞–Ω–∞')}\n"
        f"üë´ –ü–æ–ª: {worker.get('gender', '–ù–µ —É–∫–∞–∑–∞–Ω')}\n"
        f"üíº –û–ø—ã—Ç —Ä–∞–±–æ—Ç—ã: {worker.get('work_experience', '–ù–µ —É–∫–∞–∑–∞–Ω')} –º–µ—Å—è—Ü–µ–≤\n"
        f"üè∑Ô∏è –ù–∞–≤—ã–∫–∏: {', '.join(worker.get('tags', [])) if worker.get('tags') else '–ù–µ —É–∫–∞–∑–∞–Ω—ã'}\n"
        f"üìù –û —Å–µ–±–µ: {worker.get('about', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')}\n"
    )
    
    return profile_text

async def show_employer_profile(chat_id):
    employer = await get_employer(chat_id)
    if not employer:
        return "–ü—Ä–æ—Ñ–∏–ª—å —Ä–∞–±–æ—Ç–æ–¥–∞—Ç–µ–ª—è –Ω–µ –Ω–∞–π–¥–µ–Ω"
    
    profile_text = (
        f"<b>–ü—Ä–æ—Ñ–∏–ª—å —Ä–∞–±–æ—Ç–æ–¥–∞—Ç–µ–ª—è</b>\n\n"
        f"{employer.get('name_company', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')}\n"
        f"–ì—Ä–∞–Ω–∏—Ü—ã –≤–æ–∑—Ä–∞—Å—Ç–∞ {employer.get('age_min', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')}-{employer.get('age_max', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')}\n"
        f"–°—Ñ–µ—Ä–∞ –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç–∏: {employer.get('sphere', '–ù–µ —É–∫–∞–∑–∞–Ω–∞')}\n"
        f"–û–ø—ã—Ç –æ—Ç {employer.get('work_experience_min', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')} –¥–æ {employer.get('work_experience_max', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')} –º–µ—Å—è—Ü–µ–≤\n"
        f"–ù–∞–≤—ã–∫–∏: {', '.join(employer.get('need_tags', [])) if employer.get('need_tags') else '–ù–µ —É–∫–∞–∑–∞–Ω—ã'}\n"
    )

    return profile_text